[package]
name = "tssigner"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
base64 = "0.22.1"
dirs = "5.0.1" 
once_cell = "1.10.0"
clap = { version = "4.0", features = ["derive"] }
async-std = "1.10"
futures = "0.3"
bip39 = "2.0.0"
bech32 = "0.11.0"
bitcoin = { version="0.32.2", features=["rand-std", "base64"]}
bitcoin_hashes = "0.14.0"
bitcoincore-rpc = "0.19.0"
bitcoincore-zmq = {version="1.5.1", features=["async"]}
tokio = { version = "1.37.0", features = ["full"] }
async-trait = "0.1"
ordinals = "0.0.9"

libp2p = {version = "0.53.2", features = [ "tokio", "gossipsub", "mdns", "noise", "macros", "tcp", "yamux", "quic"] }
tracing = "0.1.37"
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }
toml = "0.8.14"
descriptive_toml_derive = "0.1.1"
document-features = "0.2.7"
frost-core = { git="https://github.com/keithsue/frost.git", branch = "sufay/make-new-pub", features=["serde", "serialization", "internals"]}
frost-secp256k1-tr = { git="https://github.com/keithsue/frost.git", branch = "sufay/make-new-pub", features=["serde", "serialization",]}
k256 = { version = "0.13.0", features = ["arithmetic", "expose-field", "hash2curve"] }
rand_core = "0.6"
rand_chacha = "0.3.1"
sha2 = "0.10.8"
sha256 = "1.5.0"
rand = "0.8"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
hex = "0.4.3"
ed25519-compact = "2"
chacha20poly1305 = "0.10.1"

reqwest = { version = "0.12.5", features = ["json"] } 
lazy_static = "1.4"
chrono = "0.4"
#cosmrs = "0.17.0"
prost = "0.13.1"
prost-types = "0.13.1"
cosmrs = { git = "https://github.com/sideprotocol/cosmos-rust", branch="main"}
cosmos-sdk-proto  = { git = "https://github.com/sideprotocol/cosmos-rust", branch="main"}
# Optional dependencies
tonic = { version = "0.12.1", features = ["codegen", "prost"] }


[dev-dependencies]
criterion = "0.5"
insta = { version = "1.31.0", features = ["yaml"] }

proptest = "1.0"
rand_chacha = "0.3"

[features]
nightly = []
default = ["serialization", "cheater-detection"]
serialization = ["serde", "frost-core/serialization"]
#! ## Features
## Enable `serde` support for types that need to be communicated. You
## can use `serde` to serialize structs with any encoder that supports
## `serde` (e.g. JSON with `serde_json`).
serde = ["frost-core/serde"]
## Enable cheater detection
cheater-detection = ["frost-core/cheater-detection"]
